{"ast":null,"code":"var _jsxFileName = \"/home/maundu/Documents/Project/mnada-auctions/frontend/src/components/Authentication.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport GoogleLogin from './GoogleLogin'; // Import GoogleLogin component\nimport Navbar from './Navbar'; // Import Navbar component correctly (default import)\nimport auctionBackground from '../images/auction1.jpg'; // Background image\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Authentication = ({\n  setUserRole,\n  userRole\n}) => {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true); // Toggle between login and registration modes\n  const [selectedRole, setSelectedRole] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState(''); // For registration\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('client'); // Default role is \"client\" for registration\n  const [loading, setLoading] = useState(false); // Loading state for registration\n  const [error, setError] = useState(''); // Error message\n  const [successMessage, setSuccessMessage] = useState(''); // Success message for registration\n  const navigate = useNavigate();\n  const mockDatabase = [{\n    username: \"admin\",\n    email: \"admin@example.com\",\n    password: \"admin123\",\n    role: \"admin\"\n  }, {\n    username: \"auctioneer\",\n    email: \"auctioneer@example.com\",\n    password: \"auction123\",\n    role: \"auctioneer\"\n  }, {\n    username: \"client\",\n    email: \"client@example.com\",\n    password: \"client123\",\n    role: \"client\"\n  }];\n  const handleRoleChange = event => {\n    setSelectedRole(event.target.value);\n  };\n  const handleLogin = event => {\n    event.preventDefault();\n\n    // Verify if entered credentials match any in the mock database\n    const authenticatedUser = mockDatabase.find(user => user.username === username && user.password === password && user.role === selectedRole);\n    if (authenticatedUser) {\n      const token = btoa(JSON.stringify({\n        username,\n        role: selectedRole\n      }));\n      localStorage.setItem(\"access_token\", token);\n      setUserRole(selectedRole);\n      navigate(`/${selectedRole}-dashboard`);\n    } else {\n      setError(\"Invalid username, password, or role selection. Please try again.\");\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    if (!username || !email || !password) {\n      setError(\"All fields are required.\");\n      setLoading(false);\n      return;\n    }\n    const existingUser = mockDatabase.find(user => user.username === username || user.email === email);\n    if (existingUser) {\n      setError(\"Username or email already exists.\");\n      setLoading(false);\n      return;\n    }\n    const existingAdmin = mockDatabase.find(user => user.role === \"admin\");\n    if (role === \"admin\" && existingAdmin) {\n      setError(\"An admin already exists. Only one admin is allowed.\");\n      setLoading(false);\n      return;\n    }\n    mockDatabase.push({\n      username,\n      email,\n      password,\n      role\n    });\n    localStorage.setItem(\"newUser\", JSON.stringify({\n      username,\n      email,\n      role\n    }));\n    setSuccessMessage(\"Registration Successful! Redirecting to login...\");\n    setTimeout(() => {\n      setIsLoginMode(true);\n    }, 2000);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative min-h-screen min-w-full bg-cover bg-center transition-opacity duration-300 hover:bg-opacity-75\",\n    style: {\n      backgroundImage: `url(${auctionBackground})`,\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      height: '100vh',\n      width: '100vw'\n    },\n    children: [userRole && /*#__PURE__*/_jsxDEV(Navbar, {\n      userRole: userRole,\n      handleLogout: () => setUserRole(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md p-6 bg-white rounded shadow-lg relative z-10 group hover:bg-opacity-75\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"absolute top-4 left-4 bg-gray-500 text-white p-2 rounded\",\n          children: \"Return Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), isLoginMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center text-2xl font-semibold mb-4\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500 text-sm mb-4\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-gray-700\",\n                children: \"Login as\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedRole,\n                onChange: handleRoleChange,\n                className: \"w-full p-2 border border-gray-300 rounded\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"auctioneer\",\n                  children: \"Auctioneer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"client\",\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              className: \"w-full p-2 border border-gray-300 rounded\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              className: \"w-full p-2 border border-gray-300 rounded\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-blue-600 text-white p-2 rounded\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-4 text-center\",\n            children: \"or continue with:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              setUserRole: setUserRole\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsLoginMode(false),\n              className: \"text-blue-500\",\n              children: \"Don\\u2019t have an account? Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold mb-4\",\n            children: \"Create an Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500 text-sm mb-4\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-500 text-sm mb-4\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleRegister,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"Username\",\n              className: \"w-full p-2 border border-gray-300 rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\",\n              className: \"w-full p-2 border border-gray-300 rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"Password\",\n              className: \"w-full p-2 border border-gray-300 rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: role,\n              onChange: e => setRole(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"client\",\n                children: \"Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auctioneer\",\n                children: \"Auctioneer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-blue-500 text-white p-2 rounded\",\n              disabled: loading,\n              children: loading ? \"Registering...\" : \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsLoginMode(true),\n              className: \"text-blue-500\",\n              children: \"Already have an account? Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Authentication, \"eD8lc00ki15YY6znAt+Fp9UuM4M=\", false, function () {\n  return [useNavigate];\n});\n_c = Authentication;\nexport default Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useState","useNavigate","GoogleLogin","Navbar","auctionBackground","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","setUserRole","userRole","_s","isLoginMode","setIsLoginMode","selectedRole","setSelectedRole","username","setUsername","email","setEmail","password","setPassword","role","setRole","loading","setLoading","error","setError","successMessage","setSuccessMessage","navigate","mockDatabase","handleRoleChange","event","target","value","handleLogin","preventDefault","authenticatedUser","find","user","token","btoa","JSON","stringify","localStorage","setItem","handleRegister","e","existingUser","existingAdmin","push","setTimeout","className","style","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","height","width","children","handleLogout","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","required","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/maundu/Documents/Project/mnada-auctions/frontend/src/components/Authentication.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport GoogleLogin from './GoogleLogin'; // Import GoogleLogin component\nimport Navbar from './Navbar'; // Import Navbar component correctly (default import)\nimport auctionBackground from '../images/auction1.jpg'; // Background image\n\nconst Authentication = ({ setUserRole, userRole }) => {\n  const [isLoginMode, setIsLoginMode] = useState(true); // Toggle between login and registration modes\n  const [selectedRole, setSelectedRole] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState(''); // For registration\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('client'); // Default role is \"client\" for registration\n  const [loading, setLoading] = useState(false); // Loading state for registration\n  const [error, setError] = useState(''); // Error message\n  const [successMessage, setSuccessMessage] = useState(''); // Success message for registration\n  const navigate = useNavigate();\n\n  const mockDatabase = [\n    { username: \"admin\", email: \"admin@example.com\", password: \"admin123\", role: \"admin\" },\n    { username: \"auctioneer\", email: \"auctioneer@example.com\", password: \"auction123\", role: \"auctioneer\" },\n    { username: \"client\", email: \"client@example.com\", password: \"client123\", role: \"client\" },\n  ];\n\n  const handleRoleChange = (event) => {\n    setSelectedRole(event.target.value);\n  };\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n\n    // Verify if entered credentials match any in the mock database\n    const authenticatedUser = mockDatabase.find(\n      (user) =>\n        user.username === username &&\n        user.password === password &&\n        user.role === selectedRole\n    );\n\n    if (authenticatedUser) {\n      const token = btoa(JSON.stringify({ username, role: selectedRole }));\n      localStorage.setItem(\"access_token\", token);\n      setUserRole(selectedRole);\n      navigate(`/${selectedRole}-dashboard`);\n    } else {\n      setError(\"Invalid username, password, or role selection. Please try again.\");\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n\n    if (!username || !email || !password) {\n      setError(\"All fields are required.\");\n      setLoading(false);\n      return;\n    }\n\n    const existingUser = mockDatabase.find(\n      (user) => user.username === username || user.email === email\n    );\n\n    if (existingUser) {\n      setError(\"Username or email already exists.\");\n      setLoading(false);\n      return;\n    }\n\n    const existingAdmin = mockDatabase.find((user) => user.role === \"admin\");\n\n    if (role === \"admin\" && existingAdmin) {\n      setError(\"An admin already exists. Only one admin is allowed.\");\n      setLoading(false);\n      return;\n    }\n\n    mockDatabase.push({ username, email, password, role });\n    localStorage.setItem(\"newUser\", JSON.stringify({ username, email, role }));\n    setSuccessMessage(\"Registration Successful! Redirecting to login...\");\n    setTimeout(() => {\n      setIsLoginMode(true);\n    }, 2000);\n    setLoading(false);\n  };\n\n  return (\n    <div \n      className=\"relative min-h-screen min-w-full bg-cover bg-center transition-opacity duration-300 hover:bg-opacity-75\"\n      style={{ \n        backgroundImage: `url(${auctionBackground})`, \n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        height: '100vh',\n        width: '100vw'\n      }}\n    >\n      {userRole && <Navbar userRole={userRole} handleLogout={() => setUserRole(null)} />}\n\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"max-w-md p-6 bg-white rounded shadow-lg relative z-10 group hover:bg-opacity-75\">\n          <button\n            onClick={() => navigate('/')}\n            className=\"absolute top-4 left-4 bg-gray-500 text-white p-2 rounded\"\n          >\n            Return Home\n          </button>\n\n          {isLoginMode ? (\n            <>\n              <h2 className=\"text-center text-2xl font-semibold mb-4\">Login</h2>\n              {error && <div className=\"text-red-500 text-sm mb-4\">{error}</div>}\n              <form onSubmit={handleLogin} className=\"space-y-4\">\n                <div className=\"mb-4\">\n                  <label className=\"block text-gray-700\">Login as</label>\n                  <select\n                    value={selectedRole}\n                    onChange={handleRoleChange}\n                    className=\"w-full p-2 border border-gray-300 rounded\"\n                    required\n                  >\n                    <option value=\"\">Select Role</option>\n                    <option value=\"admin\">Admin</option>\n                    <option value=\"auctioneer\">Auctioneer</option>\n                    <option value=\"client\">Client</option>\n                  </select>\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  className=\"w-full p-2 border border-gray-300 rounded\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  className=\"w-full p-2 border border-gray-300 rounded\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n                <button type=\"submit\" className=\"w-full bg-blue-600 text-white p-2 rounded\">\n                  Login\n                </button>\n              </form>\n              <div className=\"my-4 text-center\">or continue with:</div>\n              <div className=\"mt-4\">\n                <GoogleLogin setUserRole={setUserRole} />\n              </div>\n              <div className=\"mt-4 text-center\">\n                <button onClick={() => setIsLoginMode(false)} className=\"text-blue-500\">\n                  Don’t have an account? Register\n                </button>\n              </div>\n            </>\n          ) : (\n            <>\n              <h2 className=\"text-2xl font-bold mb-4\">Create an Account</h2>\n              {error && <div className=\"text-red-500 text-sm mb-4\">{error}</div>}\n              {successMessage && <div className=\"text-green-500 text-sm mb-4\">{successMessage}</div>}\n              <form onSubmit={handleRegister} className=\"space-y-4\">\n                <input\n                  type=\"text\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  placeholder=\"Username\"\n                  className=\"w-full p-2 border border-gray-300 rounded\"\n                  required\n                />\n                <input\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Email\"\n                  className=\"w-full p-2 border border-gray-300 rounded\"\n                  required\n                />\n                <input\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"Password\"\n                  className=\"w-full p-2 border border-gray-300 rounded\"\n                  required\n                />\n                <select\n                  value={role}\n                  onChange={(e) => setRole(e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded\"\n                >\n                  <option value=\"client\">Client</option>\n                  <option value=\"auctioneer\">Auctioneer</option>\n                  <option value=\"admin\">Admin</option>\n                </select>\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-blue-500 text-white p-2 rounded\"\n                  disabled={loading}\n                >\n                  {loading ? \"Registering...\" : \"Register\"}\n                </button>\n              </form>\n              <div className=\"mt-4 text-center\">\n                <button onClick={() => setIsLoginMode(true)} className=\"text-blue-500\">\n                  Already have an account? Login\n                </button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Authentication;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}