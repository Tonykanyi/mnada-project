{"ast":null,"code":"var _jsxFileName = \"/home/maundu/Documents/Project/mnada-auctions/frontend/src/components/GoogleLogin.js\";\nimport React from 'react';\nimport { auth, provider } from './firebase-config';\nimport { signInWithPopup } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLogin = ({\n  setUserRole\n}) => {\n  const handleGoogleLogin = async () => {\n    try {\n      // Trigger Google sign-in popup\n      const result = await signInWithPopup(auth, provider);\n\n      // Signed-in user information\n      const user = result.user;\n\n      // Set user role (you can add your custom logic here)\n      setUserRole('client'); // Adjust based on your application's logic\n\n      // Save user details to local storage\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      // Redirect to a specific page\n      window.location.href = \"/\"; // Update with your desired route\n    } catch (error) {\n      console.error(\"Error during Google login:\", error);\n      alert(\"Login failed, please try again!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      className: \"w-full bg-red-600 text-white p-2 rounded\",\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = GoogleLogin;\nexport default GoogleLogin;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"names":["React","auth","provider","signInWithPopup","jsxDEV","_jsxDEV","GoogleLogin","setUserRole","handleGoogleLogin","result","user","localStorage","setItem","JSON","stringify","window","location","href","error","console","alert","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/maundu/Documents/Project/mnada-auctions/frontend/src/components/GoogleLogin.js"],"sourcesContent":["import React from 'react';\nimport { auth, provider } from './firebase-config';\nimport { signInWithPopup } from 'firebase/auth';\n\nconst GoogleLogin = ({ setUserRole }) => {\n  const handleGoogleLogin = async () => {\n    try {\n      // Trigger Google sign-in popup\n      const result = await signInWithPopup(auth, provider);\n\n      // Signed-in user information\n      const user = result.user;\n\n      // Set user role (you can add your custom logic here)\n      setUserRole('client'); // Adjust based on your application's logic\n\n      // Save user details to local storage\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      // Redirect to a specific page\n      window.location.href = \"/\"; // Update with your desired route\n    } catch (error) {\n      console.error(\"Error during Google login:\", error);\n      alert(\"Login failed, please try again!\");\n    }\n  };\n\n  return (\n    <div>\n      <button\n        onClick={handleGoogleLogin}\n        className=\"w-full bg-red-600 text-white p-2 rounded\"\n      >\n        Sign in with Google\n      </button>\n    </div>\n  );\n};\n\nexport default GoogleLogin;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,QAAQ,mBAAmB;AAClD,SAASC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACvC,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMC,MAAM,GAAG,MAAMN,eAAe,CAACF,IAAI,EAAEC,QAAQ,CAAC;;MAEpD;MACA,MAAMQ,IAAI,GAAGD,MAAM,CAACC,IAAI;;MAExB;MACAH,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;MAEvB;MACAI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;;MAElD;MACAK,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDE,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MACEiB,OAAO,EAAEd,iBAAkB;MAC3Be,SAAS,EAAC,0CAA0C;MAAAF,QAAA,EACrD;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GAjCItB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}